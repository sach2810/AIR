package cnk.air_commercialscalculationengine.settlementrules;

/**
 * This class was automatically generated by the data modeler tool.
 */

public class RemittanceFee implements java.io.Serializable
{


	  public boolean CheckRange(String configuredInput, double checkingValue)
	  {

	      String[] configuredInputList = configuredInput.split(";");
	      if (configuredInputList[0].equals("LESSTHANEQUALTO"))
	      {

	         return LESSTHANEQUALTO(Double.parseDouble(configuredInputList[1]), checkingValue);
	      }
	      else if (configuredInputList[0].equals("GREATERTHANEQUALTO"))
	      {

	         return GREATERTHANEQUALTO(Double.parseDouble(configuredInputList[1]), checkingValue);
	      }
	      else if (configuredInputList[0].equals("BETWEEN"))
	      {

	         return BETWEEN(Double.parseDouble(configuredInputList[1]), Double.parseDouble(configuredInputList[2]), checkingValue);
	      }
	      else if (configuredInputList[0].equals("EQUALTO"))
	      {

	         return EQUAL(Double.parseDouble(configuredInputList[1]), checkingValue);
	      }
	      else if (configuredInputList[0].equals("IN"))
	      {

	         return IN(configuredInputList[1], checkingValue);
	      }

	      return false;

	  }

	  public boolean LESSTHANEQUALTO(double configuredInput, double checkingValue)
	  {

	      if (checkingValue <= configuredInput)
	         return true;

	      return false;
	  }

	  public boolean GREATERTHANEQUALTO(double configuredInput, double checkingValue)
	  {

	      if (checkingValue >= configuredInput)
	         return true;

	      return false;
	  }

	  public boolean BETWEEN(double lowerLimit, double upperLimit, double checkingValue)
	  {

	      if (GREATERTHANEQUALTO(lowerLimit, checkingValue) && LESSTHANEQUALTO(upperLimit, checkingValue))
	         return true;

	      return false;
	  }

	  public boolean EQUAL(double configuredInput, double checkingValue)
	  {

	      if (checkingValue == configuredInput)
	         return true;

	      return false;
	  }

	  public boolean IN(String configuredInput, double checkingValue)
	  {

	      String[] configuredInputList = configuredInput.split("/");
	      for (String tempConfiguredInput : configuredInputList)
	      {

	         if (EQUAL(Double.parseDouble(tempConfiguredInput), checkingValue))
	            return true;
	      }

	      return false;
	  }
	
	
   static final long serialVersionUID = 1L;

   private java.lang.String contractType;
   private double totalSettlementAmount;
   private java.lang.String totalSettlementCurrency;
   private double commercialAmount;
   private java.lang.String commercialCurrency;
   private java.lang.String commercialType;
   private boolean isApplicable;

   public RemittanceFee()
   {
   }

   public java.lang.String getContractType()
   {
      return this.contractType;
   }

   public void setContractType(java.lang.String contractType)
   {
      this.contractType = contractType;
   }

   public double getTotalSettlementAmount()
   {
      return this.totalSettlementAmount;
   }

   public void setTotalSettlementAmount(double totalSettlementAmount)
   {
      this.totalSettlementAmount = totalSettlementAmount;
   }

   public java.lang.String getTotalSettlementCurrency()
   {
      return this.totalSettlementCurrency;
   }

   public void setTotalSettlementCurrency(
         java.lang.String totalSettlementCurrency)
   {
      this.totalSettlementCurrency = totalSettlementCurrency;
   }

   public double getCommercialAmount()
   {
      return this.commercialAmount;
   }

   public void setCommercialAmount(double commercialAmount)
   {
      this.commercialAmount = commercialAmount;
   }

   public java.lang.String getCommercialCurrency()
   {
      return this.commercialCurrency;
   }

   public void setCommercialCurrency(java.lang.String commercialCurrency)
   {
      this.commercialCurrency = commercialCurrency;
   }

   public java.lang.String getCommercialType()
   {
      return this.commercialType;
   }

   public void setCommercialType(java.lang.String commercialType)
   {
      this.commercialType = commercialType;
   }

   public boolean isIsApplicable()
   {
      return this.isApplicable;
   }

   public void setIsApplicable(boolean isApplicable)
   {
      this.isApplicable = isApplicable;
   }

   public RemittanceFee(java.lang.String contractType,
         double totalSettlementAmount,
         java.lang.String totalSettlementCurrency, double commercialAmount,
         java.lang.String commercialCurrency,
         java.lang.String commercialType, boolean isApplicable)
   {
      this.contractType = contractType;
      this.totalSettlementAmount = totalSettlementAmount;
      this.totalSettlementCurrency = totalSettlementCurrency;
      this.commercialAmount = commercialAmount;
      this.commercialCurrency = commercialCurrency;
      this.commercialType = commercialType;
      this.isApplicable = isApplicable;
   }

}